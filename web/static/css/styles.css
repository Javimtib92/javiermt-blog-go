@font-face {
  font-family: Barlow_Condensed;

  font-style: normal;

  font-weight: 400;

  font-display: swap;

  src: url(../fonts/BarlowCondensed/BarlowCondensed-Regular.woff2)
    format("woff2");

  unicode-range: u+0102-0103, u+0110-0111, u+0128-0129, u+0168-0169, u+01a0-01a1,
    u+01af-01b0, u+0300-0301, u+0303-0304, u+0308-0309, u+0323, u+0329,
    u+1ea0-1ef9, u+20ab;
}

@font-face {
  font-family: Barlow_Condensed;

  font-style: normal;

  font-weight: 400;

  font-display: swap;

  src: url(../fonts/BarlowCondensed/BarlowCondensed-Regular.woff2)
    format("woff2");

  unicode-range: u+0100-02af, u+0304, u+0308, u+0329, u+1e00-1e9f, u+1ef2-1eff,
    u+2020, u+20a0-20ab, u+20ad-20cf, u+2113, u+2c60-2c7f, u+a720-a7ff;
}

@font-face {
  font-family: Barlow_Condensed;

  font-style: normal;

  font-weight: 400;

  font-display: swap;

  src: url(../fonts/BarlowCondensed/BarlowCondensed-Regular.woff2)
    format("woff2");

  unicode-range: u+00??, u+0131, u+0152-0153, u+02bb-02bc, u+02c6, u+02da,
    u+02dc, u+0304, u+0308, u+0329, u+2000-206f, u+2074, u+20ac, u+2122, u+2191,
    u+2193, u+2212, u+2215, u+feff, u+fffd;
}

@font-face {
  font-family: Barlow_Condensed;

  font-style: normal;

  font-weight: 700;

  font-display: swap;

  src: url(../fonts/BarlowCondensed/BarlowCondensed-Bold.woff2) format("woff2");

  unicode-range: u+0102-0103, u+0110-0111, u+0128-0129, u+0168-0169, u+01a0-01a1,
    u+01af-01b0, u+0300-0301, u+0303-0304, u+0308-0309, u+0323, u+0329,
    u+1ea0-1ef9, u+20ab;
}

@font-face {
  font-family: Barlow_Condensed;

  font-style: normal;

  font-weight: 700;

  font-display: swap;

  src: url(../fonts/BarlowCondensed/BarlowCondensed-Bold.woff2) format("woff2");

  unicode-range: u+0100-02af, u+0304, u+0308, u+0329, u+1e00-1e9f, u+1ef2-1eff,
    u+2020, u+20a0-20ab, u+20ad-20cf, u+2113, u+2c60-2c7f, u+a720-a7ff;
}

@font-face {
  font-family: Barlow_Condensed;

  font-style: normal;

  font-weight: 700;

  font-display: swap;

  src: url(../fonts/BarlowCondensed/BarlowCondensed-Bold.woff2) format("woff2");

  unicode-range: u+00??, u+0131, u+0152-0153, u+02bb-02bc, u+02c6, u+02da,
    u+02dc, u+0304, u+0308, u+0329, u+2000-206f, u+2074, u+20ac, u+2122, u+2191,
    u+2193, u+2212, u+2215, u+feff, u+fffd;
}

@font-face {
  font-family: Barlow_Condensed_Fallback;

  src: local("Arial");

  ascent-override: 129.44%;

  descent-override: 25.89%;

  line-gap-override: 0%;

  size-adjust: 77.25%;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 400;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Regular.woff2) format("woff2");

  unicode-range: u+0460-052f, u+1c80-1c88, u+20b4, u+2de0-2dff, u+a640-a69f,
    u+fe2e-fe2f;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 400;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Regular.woff2) format("woff2");

  unicode-range: u+0301, u+0400-045f, u+0490-0491, u+04b0-04b1, u+2116;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 400;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Regular.woff2) format("woff2");

  unicode-range: u+0102-0103, u+0110-0111, u+0128-0129, u+0168-0169, u+01a0-01a1,
    u+01af-01b0, u+0300-0301, u+0303-0304, u+0308-0309, u+0323, u+0329,
    u+1ea0-1ef9, u+20ab;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 400;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Regular.woff2) format("woff2");

  unicode-range: u+0100-02af, u+0304, u+0308, u+0329, u+1e00-1e9f, u+1ef2-1eff,
    u+2020, u+20a0-20ab, u+20ad-20cf, u+2113, u+2c60-2c7f, u+a720-a7ff;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 400;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Regular.woff2) format("woff2");

  unicode-range: u+00??, u+0131, u+0152-0153, u+02bb-02bc, u+02c6, u+02da,
    u+02dc, u+0304, u+0308, u+0329, u+2000-206f, u+2074, u+20ac, u+2122, u+2191,
    u+2193, u+2212, u+2215, u+feff, u+fffd;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 500;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Medium.woff2) format("woff2");

  unicode-range: u+0460-052f, u+1c80-1c88, u+20b4, u+2de0-2dff, u+a640-a69f,
    u+fe2e-fe2f;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 500;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Medium.woff2) format("woff2");

  unicode-range: u+0301, u+0400-045f, u+0490-0491, u+04b0-04b1, u+2116;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 500;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Medium.woff2) format("woff2");

  unicode-range: u+0102-0103, u+0110-0111, u+0128-0129, u+0168-0169, u+01a0-01a1,
    u+01af-01b0, u+0300-0301, u+0303-0304, u+0308-0309, u+0323, u+0329,
    u+1ea0-1ef9, u+20ab;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 500;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Medium.woff2) format("woff2");

  unicode-range: u+0100-02af, u+0304, u+0308, u+0329, u+1e00-1e9f, u+1ef2-1eff,
    u+2020, u+20a0-20ab, u+20ad-20cf, u+2113, u+2c60-2c7f, u+a720-a7ff;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 500;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Medium.woff2) format("woff2");

  unicode-range: u+00??, u+0131, u+0152-0153, u+02bb-02bc, u+02c6, u+02da,
    u+02dc, u+0304, u+0308, u+0329, u+2000-206f, u+2074, u+20ac, u+2122, u+2191,
    u+2193, u+2212, u+2215, u+feff, u+fffd;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 700;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Bold.woff2) format("woff2");

  unicode-range: u+0460-052f, u+1c80-1c88, u+20b4, u+2de0-2dff, u+a640-a69f,
    u+fe2e-fe2f;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 700;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Bold.woff2) format("woff2");

  unicode-range: u+0301, u+0400-045f, u+0490-0491, u+04b0-04b1, u+2116;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 700;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Bold.woff2) format("woff2");

  unicode-range: u+0102-0103, u+0110-0111, u+0128-0129, u+0168-0169, u+01a0-01a1,
    u+01af-01b0, u+0300-0301, u+0303-0304, u+0308-0309, u+0323, u+0329,
    u+1ea0-1ef9, u+20ab;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 700;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Bold.woff2) format("woff2");

  unicode-range: u+0100-02af, u+0304, u+0308, u+0329, u+1e00-1e9f, u+1ef2-1eff,
    u+2020, u+20a0-20ab, u+20ad-20cf, u+2113, u+2c60-2c7f, u+a720-a7ff;
}

@font-face {
  font-family: Montserrat;

  font-style: normal;

  font-weight: 700;

  font-display: swap;

  src: url(../fonts/Montserrat/Montserrat-Bold.woff2) format("woff2");

  unicode-range: u+00??, u+0131, u+0152-0153, u+02bb-02bc, u+02c6, u+02da,
    u+02dc, u+0304, u+0308, u+0329, u+2000-206f, u+2074, u+20ac, u+2122, u+2191,
    u+2193, u+2212, u+2215, u+feff, u+fffd;
}

@font-face {
  font-family: Montserrat_Fallback;

  src: local("Arial");

  ascent-override: 84.95%;

  descent-override: 22.03%;

  line-gap-override: 0%;

  size-adjust: 113.95%;
}

@font-face {
  font-family: Oxygen_Mono;

  font-style: normal;

  font-weight: 400;

  font-display: swap;

  src: url(../fonts/OxygenMono/OxygenMono-Regular.woff2) format("woff2");

  unicode-range: u+0100-02af, u+0304, u+0308, u+0329, u+1e00-1e9f, u+1ef2-1eff,
    u+2020, u+20a0-20ab, u+20ad-20cf, u+2113, u+2c60-2c7f, u+a720-a7ff;
}

@font-face {
  font-family: Oxygen_Mono;

  font-style: normal;

  font-weight: 400;

  font-display: swap;

  src: url(../fonts/OxygenMono/OxygenMono-Regular.woff2) format("woff2");

  unicode-range: u+00??, u+0131, u+0152-0153, u+02bb-02bc, u+02c6, u+02da,
    u+02dc, u+0304, u+0308, u+0329, u+2000-206f, u+2074, u+20ac, u+2122, u+2191,
    u+2193, u+2212, u+2215, u+feff, u+fffd;
}

@font-face {
  font-family: Oxygen_Mono_Fallback;

  src: local("Arial");

  ascent-override: 72.37%;

  descent-override: 24.14%;

  line-gap-override: 0%;

  size-adjust: 135.95%;
}

/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: var(--font-mono);
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

:root {
  --font-display: Barlow_Condensed;
  --font-body: Montserrat;
  --font-mono: Oxygen_Mono;
  --color-background-base: #161a30;
  --color-primary-base: #31304d;
  --color-secondary-base: #b6bbc4;
  --color-accent-base: #e88009;
  --color-accent-secondary-base: #343d51;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.left-\[-8px\] {
  left: -8px;
}

.right-\[-8px\] {
  right: -8px;
}

.top-0 {
  top: 0px;
}

.z-10 {
  z-index: 10;
}

.-m-2 {
  margin: -0.5rem;
}

.m-0 {
  margin: 0px;
}

.-mx-4 {
  margin-left: -1rem;
  margin-right: -1rem;
}

.-my-2 {
  margin-top: -0.5rem;
  margin-bottom: -0.5rem;
}

.mx-4 {
  margin-left: 1rem;
  margin-right: 1rem;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.my-8 {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.mb-12 {
  margin-bottom: 3rem;
}

.mb-40 {
  margin-bottom: 10rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.mr-4 {
  margin-right: 1rem;
}

.mt-12 {
  margin-top: 3rem;
}

.mt-20 {
  margin-top: 5rem;
}

.mt-6 {
  margin-top: 1.5rem;
}

.box-border {
  box-sizing: border-box;
}

.flex {
  display: flex;
}

.hidden {
  display: none;
}

.h-1 {
  height: 0.25rem;
}

.h-20 {
  height: 5rem;
}

.h-6 {
  height: 1.5rem;
}

.h-8 {
  height: 2rem;
}

.h-auto {
  height: auto;
}

.h-full {
  height: 100%;
}

.w-20 {
  width: 5rem;
}

.w-6 {
  width: 1.5rem;
}

.w-8 {
  width: 2rem;
}

.w-\[90\%\] {
  width: 90%;
}

.w-auto {
  width: auto;
}

.w-full {
  width: 100%;
}

.min-w-0 {
  min-width: 0px;
}

.min-w-full {
  min-width: 100%;
}

.max-w-3xl {
  max-width: 48rem;
}

.max-w-56 {
  max-width: 14rem;
}

.flex-auto {
  flex: 1 1 auto;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.flex-row {
  flex-direction: row;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col {
  flex-direction: column;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-6 {
  gap: 1.5rem;
}

.space-x-0 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0px * var(--tw-space-x-reverse));
  margin-left: calc(0px * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}

.place-self-start {
  place-self: start;
}

.overflow-hidden {
  overflow: hidden;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-solid {
  border-style: solid;
}

.border-primary-200 {
  border-color: color-mix(in srgb, var(--color-primary-base) 30%, white);
}

.border-b-primary-200 {
  border-bottom-color: color-mix(in srgb, var(--color-primary-base) 30%, white);
}

.bg-primary-100 {
  background-color: color-mix(in srgb, var(--color-primary-base) 10%, white);
}

.bg-primary-50 {
  background-color: color-mix(in srgb, var(--color-primary-base) 5%, white);
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.p-2 {
  padding: 0.5rem;
}

.p-4 {
  padding: 1rem;
}

.px-0 {
  padding-left: 0px;
  padding-right: 0px;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.pl-2 {
  padding-left: 0.5rem;
}

.pr-4 {
  padding-right: 1rem;
}

.align-middle {
  vertical-align: middle;
}

.font-body {
  font-family: var(--font-body);
}

.font-display {
  font-family: var(--font-display);
}

.font-mono {
  font-family: var(--font-mono);
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.italic {
  font-style: italic;
}

.leading-7 {
  line-height: 1.75rem;
}

.text-accent-500 {
  color: var(--color-accent-base);
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.text-neutral-500 {
  --tw-text-opacity: 1;
  color: rgb(115 115 115 / var(--tw-text-opacity));
}

.text-neutral-700 {
  --tw-text-opacity: 1;
  color: rgb(64 64 64 / var(--tw-text-opacity));
}

.text-neutral-900 {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity));
}

.text-primary-400 {
  color: color-mix(in srgb, var(--color-primary-base) 70%, white);
}

.text-primary-600 {
  color: color-mix(in srgb, var(--color-primary-base), black 10%);
}

.text-primary-900 {
  color: color-mix(in srgb, var(--color-primary-base), black 70%);
}

.underline {
  text-decoration-line: underline;
}

.underline-offset-8 {
  text-underline-offset: 8px;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.ring-2 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-background-50 {
  --tw-ring-color: color-mix(in srgb, var(--color-background-base) 20%, white);
}

.ring-slate-500 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(100 116 139 / var(--tw-ring-opacity));
}

.ring-offset-2 {
  --tw-ring-offset-width: 2px;
}

.ring-offset-accent-secondary-300 {
  --tw-ring-offset-color: color-mix(in srgb, var(--color-accent-secondary-base) 50%, white);
}

.backdrop-blur {
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

* {
  font-family: var(--font-body);
  box-sizing: border-box;
  min-width: 0;
}

h1,
h2,
h3,
h4,
h5 {
  font-family: var(--font-display);
}

html {
  scrollbar-gutter: stable;
}

body {
  min-height: 100dvh;
}

p {
  text-wrap: pretty;
}

[x-cloak] {
  visibility: hidden !important;
}

.prose {
  margin-bottom: 1.5rem;
  margin-top: 1.5rem;
  font-size: 1rem;
  line-height: 1.5rem;
  color: color-mix(in srgb, var(--color-primary-base), black 50%);
}

:is(.dark .prose) {
  color: color-mix(in srgb, var(--color-primary-base) 30%, white);
}

.subtle {
  font-size: 0.75rem;
  line-height: 1rem;
  color: color-mix(in srgb, var(--color-primary-base) 70%, white);
}

:is(.dark .subtle) {
  color: color-mix(in srgb, var(--color-primary-base) 70%, white);
}

code[data-theme*=" "],
code[data-theme*=" "] span {
  color: var(--shiki-light);
  background-color: var(--shiki-light-bg);
}

.dark code[data-theme*=" "],
.dark code[data-theme*=" "] span {
  color: var(--shiki-dark);
  background-color: var(--shiki-dark-bg);
}

.dark pre {
  background: #cdc8ff0d;
}

.dark code {
  background-color: initial;
}

html:not(.dark) pre {
  background: #fafaf9;
}

html:not(.dark) code {
  background-color: initial;
}

[data-rehype-pretty-code-figure] > code:has(span[data-line]) {
  white-space: nowrap;
  font-weight: bold;
  padding-top: 2px;
  padding-bottom: 2px;
  padding-inline-start: 4px;
  padding-inline-end: 4px;
  border-radius: 4px;
  display: inline;
  background-color: color-mix(
    in srgb,
    var(--color-accent-secondary-base) 10%,
    white
  );
}

[data-rehype-pretty-code-figure] > code > span[data-line] > span {
  color: color-mix(in srgb, var(--color-accent-secondary-base) 80%, white);
}

.dark [data-rehype-pretty-code-figure] > code:has(span[data-line]) {
  background-color: color-mix(
    in srgb,
    var(--color-accent-secondary-base) 100%,
    white
  );
}

.dark [data-rehype-pretty-code-figure] > code > span[data-line] > span {
  color: color-mix(in srgb, var(--color-accent-secondary-base) 20%, white);
}

.dark [data-rehype-pretty-code-title] {
  background-color: rgb(28 28 28 / var(--tw-bg-opacity));
}

html:not(.dark) [data-rehype-pretty-code-title] {
  background-color: #f5f5f4;
  color: #18181b;
  border-color: #e7e5e4;
}

[data-rehype-pretty-code-title] {
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(51 51 51 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(28 28 28 / var(--tw-bg-opacity));
  padding: 0.75rem 1rem;
  font-family: var(--font-mono), ui-monospace, SFMono-Regular, Menlo, Monaco,
    Consolas, Liberation Mono, Courier New, monospace;
  font-size: 0.75rem;
  line-height: 1rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(229 229 229 / var(--tw-text-opacity));
}

[data-rehype-pretty-code-figure]:has(pre) {
  margin-top: 2rem;
  margin-bottom: 2rem;
  margin-left: -18px;
  margin-right: -18px;
  @media (min-width: 640px) {
    margin-left: auto;

    margin-right: auto;
  }
}

[data-rehype-pretty-code-title] + pre {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-top-width: 0;
}

[data-rehype-pretty-code-figure] code {
  display: grid;
  min-width: 100%;
  overflow-wrap: break-word;
  border-radius: 0;
  border-width: 0;
  padding: 0;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
  counter-reset: line;
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}

[data-rehype-pretty-code-figure] span {
  font-family: var(--font-mono), ui-monospace, SFMono-Regular, Menlo, Monaco,
    Consolas, Liberation Mono, Courier New, monospace;
}

.has-focused span[data-line]:not(.focused) {
  opacity: 0.7;
  transition: filter 0.35s, opacity 0.35s;
  filter: blur(0.095rem);
}

span[data-line][data-highlighted-line] {
  background-color: color-mix(in srgb, var(--color-primary-base) 10%, white) !important;
}

:is(.dark span[data-line][data-highlighted-line]) {
  background-color: color-mix(in srgb, var(--color-background-base), black 30%) !important;
}

span[data-line].diff.remove {
  margin-left: -1.5rem;
  margin-right: -1.5rem;
  background-color: rgb(220 38 38 / .16);
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  opacity: 0.7;
}

:is(.dark span[data-line].diff.remove) {
  background-color: rgb(248 113 113 / .16);
}

span[data-line].diff.remove:before {
  content: "-";
  position: absolute;
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

:is(.dark span[data-line].diff.remove):before {
  --tw-text-opacity: 1;
  color: rgb(248 113 113 / var(--tw-text-opacity));
}

span[data-line].diff.add {
  margin-left: -1.5rem;
  margin-right: -1.5rem;
  background-color: rgb(74 222 128 / .16);
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

:is(.dark span[data-line].diff.add) {
  background-color: rgb(74 222 128 / .16);
}

span[data-line].diff.add:before {
  content: "+";
  position: absolute;
  --tw-text-opacity: 1;
  color: rgb(34 197 94 / var(--tw-text-opacity));
}

:is(.dark span[data-line].diff.add):before {
  --tw-text-opacity: 1;
  color: rgb(74 222 128 / var(--tw-text-opacity));
}

pre {
  overflow-x: auto;
  font-weight: 400;
  line-height: 1.7142857;
  border-radius: 0.375rem;
  padding: 1.5rem;
}

mark {
  --lightness: 80%;
  --highlighted: 1;
  --highlight: hsl(var(--accent-hue, 45) 80% var(--lightness));
  background: transparent;
}

@supports (animation-timeline: view()) {
  mark {
    --highlighted: 0;
    animation: highlight steps(1) both;
    animation-timeline: view();
    animation-range: entry 100% cover 10%;
  }
}

.dark mark {
  --lightness: 35%;
}

mark span {
  background: linear-gradient(
      120deg,
      var(--highlight, lightblue) 50%,
      transparent 50%
    )
    110% 0 / 200% 100% no-repeat;
  background-position: calc((1 - var(--highlighted)) * 110%) 0;
  transition: background-position 1s;
}

@keyframes highlight {
  to {
    --highlighted: 1;
  }
}

a {
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

.title-link:hover > .anchor,
.title-link:focus > .anchor {
  visibility: visible;
}

@supports (animation-timeline: scroll()) {
  .navbar {
    --navbar-shrink: 0;
    animation: shrink;
    animation-timeline: scroll(nearest block);
    animation-timing-function: ease;
  }
}

.navbar .img-container {
  transition: transform 0.3s ease;
  will-change: transform;
  transform: translateY(calc(0px - var(--navbar-shrink) * 12px));
}

.navbar .backdrop {
  transition: transform 0.3s ease;
  will-change: transform;
  transform: translateY(calc(0px - var(--navbar-shrink) * 24px));
}

.navbar img {
  transition: transform 0.3s ease;
  will-change: transform;
  transform: scale(calc(1 - var(--navbar-shrink) * 0.2));
}

.navbar h1,
.navbar p {
  transition: opacity 0.3s ease;
  opacity: calc(1 - var(--navbar-shrink));
}

@keyframes shrink {
  0% {
    --navbar-shrink: 0;
  }

  10%,
  100% {
    --navbar-shrink: 1;
  }
}

.callout a {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
  opacity: 0.6;
}

.callout a:hover {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
  opacity: 0.4;
}

:is(.dark .callout a) {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

:is(.dark .callout a:hover) {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
  opacity: 0.4;
}

.custom-wrapper {
  position: relative !important;
  font-family: var(--font-mono) !important;
}

.custom-wrapper .cm-line {
  color: color-mix(in srgb, var(--color-accent-base), black 30%) !important;
}

:is(.dark .custom-wrapper .cm-line) {
  --tw-text-opacity: 1 !important;
  color: rgb(255 199 119 / var(--tw-text-opacity)) !important;
}

.custom-wrapper .cm-line span {
  font-family: var(--font-mono) !important;
}

:is(.dark .custom-wrapper .cm-line span) {
  font-family: var(--font-mono) !important;
}

.custom-wrapper .sp-file-explorer-list span {
  font-family: var(--font-mono) !important;
}

.custom-wrapper .sp-syntax-static {
  color: var(--color-accent-base) !important;
}

:is(.dark .custom-wrapper .sp-syntax-static) {
  color: color-mix(in srgb, var(--color-accent-base) 70%, white) !important;
}

.custom-wrapper .sp-syntax-property {
  color: color-mix(in srgb, var(--color-primary-base), black 50%) !important;
}

:is(.dark .custom-wrapper .sp-syntax-property) {
  color: color-mix(in srgb, var(--color-primary-base) 10%, white) !important;
}

.custom-wrapper .sp-syntax-keyword {
  --tw-text-opacity: 1 !important;
  color: rgb(239 68 68 / var(--tw-text-opacity)) !important;
}

:is(.dark .custom-wrapper .sp-syntax-keyword) {
  --tw-text-opacity: 1 !important;
  color: rgb(255 117 127 / var(--tw-text-opacity)) !important;
}

.custom-wrapper .sp-syntax-punctuation {
  color: color-mix(in srgb, var(--color-primary-base), black 50%) !important;
}

:is(.dark .custom-wrapper .sp-syntax-punctuation) {
  color: color-mix(in srgb, var(--color-primary-base) 50%, white) !important;
}

.custom-wrapper .sp-syntax-plain {
  --tw-text-opacity: 1 !important;
  color: rgb(234 179 8 / var(--tw-text-opacity)) !important;
}

:is(.dark .custom-wrapper .sp-syntax-plain) {
  --tw-text-opacity: 1 !important;
  color: rgb(250 204 21 / var(--tw-text-opacity)) !important;
}

.custom-wrapper .sp-syntax-definition {
  --tw-text-opacity: 1 !important;
  color: rgb(101 163 13 / var(--tw-text-opacity)) !important;
}

:is(.dark .custom-wrapper .sp-syntax-definition) {
  --tw-text-opacity: 1 !important;
  color: rgb(195 232 141 / var(--tw-text-opacity)) !important;
}

.custom-wrapper .sp-syntax-string {
  color: color-mix(in srgb, var(--color-accent-base), black 30%) !important;
}

:is(.dark .custom-wrapper .sp-syntax-string) {
  --tw-text-opacity: 1 !important;
  color: rgb(255 199 119 / var(--tw-text-opacity)) !important;
}

.custom-wrapper .sp-layout {
  border-style: none !important;
  background-color: color-mix(in srgb, var(--color-primary-base) 5%, white) !important;
}

:is(.dark .custom-wrapper .sp-layout) {
  background-color: color-mix(in srgb, var(--color-background-base), black 10%) !important;
}

.custom-wrapper .sp-file-explorer {
  background-color: color-mix(in srgb, var(--color-primary-base) 5%, white) !important;
}

:is(.dark .custom-wrapper .sp-file-explorer) {
  background-color: color-mix(in srgb, var(--color-background-base), black 10%) !important;
}

.custom-wrapper .sp-explorer[data-active="true"] {
  font-weight: 700 !important;
  color: color-mix(in srgb, var(--color-accent-base) 70%, white) !important;
}

.custom-wrapper .sp-explorer:not([data-active="true"]):hover {
  color: color-mix(in srgb, var(--color-primary-base), black 50%) !important;
}

:is(.dark .custom-wrapper .sp-explorer:not([data-active="true"]):hover) {
  color: color-mix(in srgb, var(--color-primary-base) 5%, white) !important;
}

.custom-wrapper .sp-editor,
.custom-wrapper .sp-cm,
.custom-wrapper .cm-editor {
  background-color: color-mix(in srgb, var(--color-primary-base) 5%, white) !important;
}

:is(.dark .custom-wrapper .sp-editor),:is(.dark 
.custom-wrapper .sp-cm),:is(.dark 
.custom-wrapper .cm-editor) {
  background-color: color-mix(in srgb, var(--color-background-base), black 10%) !important;
}

.custom-wrapper .cm-activeLine {
  background-color: color-mix(in srgb, var(--color-primary-base) 10%, white) !important;
}

:is(.dark .custom-wrapper .cm-activeLine) {
  background-color: color-mix(in srgb, var(--color-background-base) 90%, white) !important;
}

.hover\:bg-primary-100:hover {
  background-color: color-mix(in srgb, var(--color-primary-base) 10%, white);
}

.hover\:text-accent-400:hover {
  color: color-mix(in srgb, var(--color-accent-base) 70%, white);
}

.hover\:text-neutral-800:hover {
  --tw-text-opacity: 1;
  color: rgb(38 38 38 / var(--tw-text-opacity));
}

.group:hover .group-hover\:-rotate-12 {
  --tw-rotate: -12deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

:is(.dark .dark\:border-background-400) {
  border-color: color-mix(in srgb, var(--color-background-base) 90%, white);
}

:is(.dark .dark\:border-b-background-400) {
  border-bottom-color: color-mix(in srgb, var(--color-background-base) 90%, white);
}

:is(.dark .dark\:bg-background-500) {
  background-color: var(--color-background-base);
}

:is(.dark .dark\:bg-background-600) {
  background-color: color-mix(in srgb, var(--color-background-base), black 10%);
}

:is(.dark .dark\:bg-background-700) {
  background-color: color-mix(in srgb, var(--color-background-base), black 30%);
}

:is(.dark .dark\:text-2xl) {
  font-size: 1.5rem;
  line-height: 2rem;
}

:is(.dark .dark\:text-accent-400) {
  color: color-mix(in srgb, var(--color-accent-base) 70%, white);
}

:is(.dark .dark\:text-neutral-100) {
  --tw-text-opacity: 1;
  color: rgb(245 245 245 / var(--tw-text-opacity));
}

:is(.dark .dark\:text-neutral-300) {
  --tw-text-opacity: 1;
  color: rgb(212 212 212 / var(--tw-text-opacity));
}

:is(.dark .dark\:text-primary-100) {
  color: color-mix(in srgb, var(--color-primary-base) 10%, white);
}

:is(.dark .dark\:text-primary-400) {
  color: color-mix(in srgb, var(--color-primary-base) 70%, white);
}

:is(.dark .dark\:text-white) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

:is(.dark .dark\:ring-background-500) {
  --tw-ring-color: var(--color-background-base);
}

:is(.dark .dark\:ring-offset-accent-secondary-500) {
  --tw-ring-offset-color: var(--color-accent-secondary-base);
}

:is(.dark .hover\:dark\:bg-background-500):hover {
  background-color: var(--color-background-base);
}

:is(.dark .hover\:dark\:bg-background-600):hover {
  background-color: color-mix(in srgb, var(--color-background-base), black 10%);
}

:is(.dark .dark\:hover\:text-accent-300:hover) {
  color: color-mix(in srgb, var(--color-accent-base) 50%, white);
}

:is(.dark .dark\:hover\:text-neutral-200:hover) {
  --tw-text-opacity: 1;
  color: rgb(229 229 229 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .sm\:flex {
    display: flex;
  }

  .sm\:hidden {
    display: none;
  }

  .sm\:h-12 {
    height: 3rem;
  }

  .sm\:w-12 {
    width: 3rem;
  }

  .sm\:w-auto {
    width: auto;
  }

  .sm\:w-full {
    width: 100%;
  }

  .sm\:max-w-full {
    max-width: 100%;
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:items-center {
    align-items: center;
  }

  .sm\:px-0 {
    padding-left: 0px;
    padding-right: 0px;
  }

  .sm\:px-2 {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }

  .sm\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  .sm\:text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }

  .sm\:text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  :is(.dark .sm\:dark\:text-2xl) {
    font-size: 1.5rem;
    line-height: 2rem;
  }
}

@media (min-width: 768px) {
  .md\:-mx-\[28px\] {
    margin-left: -28px;
    margin-right: -28px;
  }

  .md\:mx-0 {
    margin-left: 0px;
    margin-right: 0px;
  }

  .md\:mx-auto {
    margin-left: auto;
    margin-right: auto;
  }

  .md\:px-0 {
    padding-left: 0px;
    padding-right: 0px;
  }

  .md\:px-5 {
    padding-left: 1.25rem;
    padding-right: 1.25rem;
  }
}
